#!/usr/bin/env bash

_silverfin() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  local prev=${COMP_WORDS[COMP_CWORD - 1]}
  local command=${COMP_WORDS[1]}

  COMPREPLY=()

  # Command
  if [ $COMP_CWORD -eq 1 ]; then
    local sf_commands=""
    sf_commands=$(silverfin --help 2>/dev/null | grep -E "^\s+[a-z][a-z-]*\s" | awk '{print $1}' | tr '\n' ' ')
    # Fallback
    if [ -z "$sf_commands" ]; then
      sf_commands="import-reconciliation update-reconciliation create-reconciliation import-export-file update-export-file create-export-file import-account-template update-account-template create-account-template import-shared-part update-shared-part create-shared-part add-shared-part remove-shared-part run-test create-test authorize authorize-partner stats config get-reconciliation-id get-export-file-id get-account-template-id get-shared-part-id development-mode update help"
    fi
    COMPREPLY=($(compgen -W "$sf_commands" -- "$cur"))
    return 0
  fi

  # Template name
  case "$prev" in
  --handle | -h)
    if [[ "$command" == *-reconciliation ]]; then
      if [ -d "./reconciliation_texts" ]; then
        COMPREPLY=($(compgen -W "$(ls -1 ./reconciliation_texts/)" -- "$cur"))
      fi
    fi
    return 0
    ;;
  --name | -n)
    if [[ "$command" == *-export-file ]]; then
      if [ -d "./export_files" ]; then
        COMPREPLY=($(compgen -W "$(ls -1 ./export_files/)" -- "$cur"))
      fi
    elif [[ "$command" == *-account-template ]]; then
      if [ -d "./account_templates" ]; then
        COMPREPLY=($(compgen -W "$(ls -1 ./account_templates/)" -- "$cur"))
      fi
    fi
    return 0
    ;;
  --shared-part | -s)
    if [[ "$command" == *-shared-part ]]; then
      if [ -d "./shared_parts" ]; then
        COMPREPLY=($(compgen -W "$(ls -1 ./shared_parts/)" -- "$cur"))
      fi
    fi
    return 0
    ;;
  esac

  # Flags
  if [[ "$cur" == --* ]]; then
    local flags=""
    flags=$(silverfin "$command" --help 2>/dev/null | grep -oE -- '--[a-zA-Z][a-zA-Z0-9-]*' | sort -u | tr '\n' ' ')
    COMPREPLY=($(compgen -W "$flags" -- "$cur"))
    return 0
  fi

}

_silverfin_init_completion() {
  if [[ -n ${ZSH_VERSION-} ]]; then
    if ! command -v bashcompinit >/dev/null 2>&1; then
      autoload -U bashcompinit
    fi
    if ! command -v complete >/dev/null 2>&1; then
      bashcompinit
    fi
  fi

  if command -v complete >/dev/null 2>&1; then
    complete -F _silverfin silverfin
  fi
}

_silverfin_init_completion
